name: 01-1 - Test Application

on:
  workflow_call

jobs:
  TestDotNet:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release --no-restore

      - name: Run Unit Tests
        run: |
          dotnet test CESIZen.Tests/CESIZen.Tests.csproj \
            --configuration Release \
            --no-build \
            --verbosity normal \
            --collect:"XPlat Code Coverage" \
            --results-directory ./coverage

      - name: ðŸ”§ Run Integration Tests
        run: |
          echo "ðŸ”§ ExÃ©cution des tests d'intÃ©gration..."
          dotnet test CESIZen.IntegrationTests/CESIZen.Tests.csproj \
            --configuration Release \
            --no-build \
            --verbosity normal \
            --logger trx

      - name: ðŸ“Š Upload Test Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: ./test-results
          retention-days: 7  

      - name: Upload Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: dotnet-coverage-report
          path: ./coverage
          retention-days: 3

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Stop Application
        if: always()
        run: |
          if [ ! -z "$APP_PID" ]; then
            echo "Stopping application (PID: $APP_PID)"
            kill $APP_PID 2>/dev/null || true
          fi

      - name: Clean Docker
        if: always()
        run: |
          echo "ðŸ§¹ Cleaning up Docker resources..."
          docker compose -f docker-compose-test.yaml down -v || true
          docker system prune -f || true
          echo "âœ… Cleanup completed"